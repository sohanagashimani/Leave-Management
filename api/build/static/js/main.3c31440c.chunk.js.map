{"version":3,"sources":["context/LeaveContext.js","context/LeaveState.js","pages/admin/Create.jsx","pages/login/jgi.png","pages/login/Login.jsx","pages/principal/Principal.jsx","components/LeaveRequest.jsx","pages/staff/Staff.jsx","pages/admin/Hodrequests.jsx","pages/staff/CreateLeave.jsx","pages/profile/user.png","pages/profile/UserProfile.jsx","components/NavBar.jsx","pages/View Staff/ViewStaff.jsx","pages/admin/AllLeaves.jsx","App.js","index.js"],"names":["LeaveContext","createContext","LeaveState","props","useState","userArr","setuserArr","recievedLeaveArr","setRecievedLeaveArr","requestedLeavesArr","setRequestedLeavesArr","requestesForHodArr","setRequestesForHodArr","requestsForAdminArr","setRequestsForAdminArr","allLeavesArr","setallLeavesArr","getusers","a","axios","get","users","data","console","log","postLeaveDetails","leave","post","json","staffStatus","leaveId","status","role","leaveCount","staffName","put","deleteUser","id","delete","deleteLeave","recievedRequests","staffname","recievedLeave","myRequestedLeaves","userId","requestedLeaves","requestesForHod","dep","reqsForHod","requestsForAdmin","reqsForPrincipal","login","userDetails","headers","loggedUser","localStorage","setItem","JSON","stringify","getAllLeaves","res","getAllLeavesforAdmin","Provider","value","children","Create","userChange","setuserChange","userChange2","setuserChange2","isDisabled","setisDisabled","user","setUser","formErrors","setFormErrors","filteredArr","setFilteredArr","userContext","useContext","navigate","useNavigate","localUserDetails","parse","getItem","userDets","useEffect","validate","values","errors","staffId","designation","email","test","password","joiningDate","phnumber","type","department","response","toast","error","callUserApi","handleClick","e","preventDefault","success","clearFields","msg","forEach","element","Array","from","target","deleteUserFrontend","_id","deleteResponse","autoClose","handleChange","name","className","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","onChange","placeholder","FloatingLabel","label","Select","disabled","Button","variant","newArr","filter","style","overflowX","Table","striped","bordered","hover","map","regularStaffLeaves","probationStaffLeaves","display","justifyContent","cursor","onClick","Login","removeItem","reloadCount","sessionStorage","String","window","location","reload","handleOnChange","handleOnSubmit","src","logo","alt","htmlFor","Principal","border","padding","LeaveRequest","modalDetails","setModalDetails","leaveReqSubStaffDetails","setLeaveReqSubStaffDetails","detailedLeaveReq","setDetailedLeaveReq","updatedHodArr","uniqueArr","reduce","obj","set","Map","todaysDate","Date","updatedArr","startDateObj","dateStart","endDateObj","dateEnd","getDate","push","count","populateModal","modalDeets","reverse","leaveReq","toLocaleDateString","day","month","year","replace","byStaff","subStaffArr","populateSubStaffDetailsModal","tabIndex","item","byHod","byAdmin","populateDetailedView","textAlign","subject","body","toDateString","noOfDays","some","info","danger","width","height","margin","Staff","Hodrequests","CreateLeave","totalLeaveDays","setTotalLeaveDays","dateEndState","setDateEndState","dateStartState","setDateStartState","isEndDateDisabled","setIsEndDateDisabled","isSubmitDisabled","setisSubmitDisabled","selected","setSelected","multipleSubStaff","leaveData","setLeaveData","start","finish","totalDays","sendLeaveDetails","length","subStaff","changeInputHandler","options","rows","min","hasSelectAll","UserProfile","marginTop","Card","Img","Body","Title","NavBar","passwordDetails","setPasswordDetails","useRef","passwordAgain","oldPassword","changeHandler","changePasswordSubmit","current","warning","Navbar","bg","expand","Brand","NavLink","to","Toggle","marginRight","Collapse","Nav","Link","clear","ref","ViewStaff","AllLeaves","setAllLeavesArr","App","position","pauseOnHover","hideProgressBar","newestOnTop","transition","Slide","closeOnClick","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c31440c.chunk.js","sourcesContent":["import { createContext } from \"react\";\nconst LeaveContext = createContext();\nexport default LeaveContext;","import axios from \"axios\";\n\nimport { useState } from \"react\";\nimport LeaveContext from \"./LeaveContext\";\n\nfunction LeaveState(props) {\n  const [userArr, setuserArr] = useState([]);\n  const [recievedLeaveArr, setRecievedLeaveArr] = useState([]);\n  const [requestedLeavesArr, setRequestedLeavesArr] = useState([]);\n  const [requestesForHodArr, setRequestesForHodArr] = useState([]);\n  const [requestsForAdminArr, setRequestsForAdminArr] = useState([]);\n  const [allLeavesArr, setallLeavesArr] = useState([]);\n\n  const getusers = async () => {\n    try {\n      const users = await axios.get(\"api/staff/fetchusers\");\n      // console.log(users);\n      setuserArr(users.data);\n      return users.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const postLeaveDetails = async (leave) => {\n    try {\n      const json = await axios.post(\"api/leave/\", leave);\n\n      return json.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const staffStatus = async (leaveId, status, role, leaveCount, staffName) => {\n    try {\n      const json = await axios.put(\n        `api/leave/${leaveId}/${status}/${role}/${leaveCount}/${staffName}`\n      );\n      return json.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteUser = async (id) => {\n    try {\n      const json = await axios.delete(`api/staff/${id}`);\n\n      return json.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteLeave = async (id) => {\n    try {\n      const json = await axios.delete(`api/leave/${id}`);\n      return json.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const recievedRequests = async (staffname) => {\n    try {\n      const recievedLeave = await axios.get(`api/leave/staff/${staffname}`);\n      setRecievedLeaveArr(recievedLeave.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const myRequestedLeaves = async (userId) => {\n    try {\n      const requestedLeaves = await axios.get(`api/leave/${userId}`);\n      // console.log(requestedLeaves,\"saddsd\");\n      setRequestedLeavesArr(requestedLeaves.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const requestesForHod = async (dep) => {\n    try {\n      const reqsForHod = await axios.get(`api/leave/hod/${dep}`);\n      setRequestesForHodArr(reqsForHod.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const requestsForAdmin = async () => {\n    try {\n      const reqsForPrincipal = await axios.get(`api/leave/`);\n      setRequestsForAdminArr(reqsForPrincipal.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const login = async (userDetails) => {\n    try {\n      const loggedUser = await axios.post(\"api/auth/login\", userDetails, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      localStorage.setItem(\"storedUser\", JSON.stringify(loggedUser.data));\n      return loggedUser.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getAllLeaves = async () => {\n    try {\n      const res = await axios.get(`api/leave/principal/allLeaves`);\n      setallLeavesArr(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getAllLeavesforAdmin = async () => {\n    try {\n      const res = await axios.get(`api/leave/admin/allLeaves`);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <LeaveContext.Provider\n      value={{\n        getusers,\n        userArr,\n        deleteUser,\n        postLeaveDetails,\n        recievedRequests,\n        recievedLeaveArr,\n        myRequestedLeaves,\n        requestedLeavesArr,\n        staffStatus,\n        requestesForHod,\n        requestesForHodArr,\n        requestsForAdmin,\n        requestsForAdminArr,\n        login,\n        deleteLeave,\n        getAllLeaves,\n        getAllLeavesforAdmin,\n        allLeavesArr,\n        setuserArr,\n      }}\n    >\n      {props.children}\n    </LeaveContext.Provider>\n  );\n}\n\nexport default LeaveState;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, Row, Col, FloatingLabel, Table } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport DeleteOutlineTwoToneIcon from \"@mui/icons-material/DeleteOutlineTwoTone\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction Create() {\n  const [userChange, setuserChange] = useState(false);\n  const [userChange2, setuserChange2] = useState(false);\n  const [isDisabled, setisDisabled] = useState(true);\n  const [user, setUser] = useState({});\n  const [formErrors, setFormErrors] = useState({});\n  const [filteredArr, setFilteredArr] = useState([]);\n  const userContext = useContext(LeaveContext);\n  const { getusers, userArr, deleteUser } = userContext;\n\n  const navigate = useNavigate();\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n  useEffect(() => {\n    if (userDets?.role !== \"Admin\" || localUserDetails === null) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, [userChange]);\n  const validate = (values) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const errors = {};\n    if (!values.staffId) {\n      errors.staffId = \"Staff Id is required \";\n    }\n    if (!values.designation) {\n      errors.designation = \"Designation is required \";\n    }\n    if (!values.staffName) {\n      errors.staffName = \"Staff name  is required \";\n    }\n    if (!values.email) {\n      errors.email = \"Email id  is required \";\n    } else if (!emailRegex.test(values.email)) {\n      errors.email = \"Enter a valid email address\";\n    }\n    if (!values.password) {\n      errors.password = \"Password  is required \";\n    }\n    if (!values.joiningDate) {\n      errors.joiningDate = \"Joining date  is required \";\n    }\n    if (!values.phnumber) {\n      errors.phnumber = \"Phone number  is required \";\n    }\n    if (!values.role) {\n      errors.role = \"Role is required \";\n    }\n    if (!values.type) {\n      errors.type = \"Type  is required \";\n    }\n    if (values.role !== \"Principal\") {\n      if (!values.department) {\n        errors.department = \"department  is required \";\n      }\n    }\n    return errors;\n  };\n  useEffect(() => {\n    async function callUserApi() {\n      if (userDets?.role === \"Admin\") {\n        const response = await getusers();\n        // console.log(response);\n        if (response) {\n          setFilteredArr(response);\n        } else {\n          toast.error(\"Internal Server Error\");\n        }\n      }\n    }\n    callUserApi();\n    // eslint-disable-next-line\n  }, [userChange2]);\n  const handleClick = async (e) => {\n    e.preventDefault();\n    setFormErrors(validate(user));\n    if (\n      !(user.staffId &&\n      user.staffName &&\n      user.email &&\n      user.joiningDate &&\n      user.password &&\n      user.phnumber &&\n      user.role !== \"Principal\"\n        ? user.type && user.department\n        : user.type)\n    )\n      return;\n\n    try {\n      const json = await axios.post(\"api/auth/register\", user);\n\n      if (json.data.success) {\n        toast.success(\"User successfully created\");\n        clearFields(e);\n        setUser({});\n      } else if (json.data.success === false) {\n        toast.error(json.data.msg);\n      } else {\n        json.data.forEach((element) => {\n          toast.error(element.msg);\n        });\n      }\n    } catch (error) {\n      clearFields(e);\n      console.log(error);\n    }\n    setuserChange2(!userChange2);\n  };\n  const clearFields = (e) => {\n    Array.from(e.target).forEach((e) => (e.value = \"\"));\n  };\n\n  const deleteUserFrontend = async (user) => {\n    const deleteResponse = await deleteUser(user._id);\n    if (deleteResponse) {\n      toast.success(deleteResponse, {\n        autoClose: 1200,\n      });\n    } else {\n      toast.error(\"internal server error\");\n    }\n    setuserChange2(!userChange2);\n  };\n\n  const handleChange = (e) => {\n    if (user.role === \"Staff\" || user.role === \"Hod\") {\n      setisDisabled(false);\n    } else {\n      setisDisabled(true);\n    }\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const filterDepartment = (e) => {\n    // console.log(e.target.value);\n    if (e.target.value === \"ALL\") {\n      setFilteredArr(userArr);\n    } else {\n      let newArr = userArr?.filter(\n        (user) => user.department === e.target.value\n      );\n      setFilteredArr(newArr);\n      setuserChange(!userChange);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container my-5\">\n        <h1>Create a new staff member</h1>\n        <hr />\n        <Form onSubmit={handleClick}>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Staff ID\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                name=\"staffId\"\n                type=\"text\"\n                placeholder=\"Enter Staff Id\"\n              />\n              <p className=\"text-danger\">{formErrors.staffId}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Designation\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                name=\"designation\"\n                type=\"text\"\n                placeholder=\"Enter designation\"\n              />\n              <p className=\"text-danger\">{formErrors.designation}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Staff Name\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                name=\"staffName\"\n                type=\"text\"\n                placeholder=\"Enter Staff Name\"\n              />\n              <p className=\"text-danger\">{formErrors.staffName}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Email\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter Email\"\n              />\n              <p className=\"text-danger\">{formErrors.email}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Password\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                type=\"Password\"\n                name=\"password\"\n                placeholder=\"Enter Password\"\n              />\n              <p className=\"text-danger\">{formErrors.password}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Joining Date\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                type=\"date\"\n                name=\"joiningDate\"\n              />{\" \"}\n              <p className=\"text-danger\">{formErrors.joiningDate}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Phone Number\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                onChange={handleChange}\n                type=\"tel\"\n                name=\"phnumber\"\n                placeholder=\"Enter Phone Number\"\n              />\n              <p className=\"text-danger\">{formErrors.phnumber}</p>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Role\n            </Form.Label>\n            <Col sm=\"10\">\n              <FloatingLabel controlId=\"floatingSelect\" label=\"Select a role\">\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"role\"\n                  onChange={handleChange}\n                >\n                  <option></option>\n                  <option value=\"Hod\">Hod</option>\n                  <option value=\"Staff\">Staff</option>\n                  <option value=\"Principal\">Principal</option>\n                </Form.Select>{\" \"}\n                <p className=\"text-danger\">{formErrors.role}</p>\n              </FloatingLabel>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n            <Form.Label column sm=\"2\">\n              Type\n            </Form.Label>\n            <Col sm=\"10\">\n              <FloatingLabel\n                controlId=\"floatingSelect\"\n                label=\"Select type of Staff\"\n              >\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"type\"\n                  onChange={handleChange}\n                >\n                  <option> </option>\n                  <option value=\"Regular\">Regular</option>\n                  <option value=\"Probation\">Probation</option>\n                </Form.Select>{\" \"}\n                <p className=\"text-danger\">{formErrors.type}</p>\n              </FloatingLabel>\n            </Col>\n          </Form.Group>\n\n          <Form.Group\n            as={Row}\n            className=\"mb-3\"\n            controlId=\"formPlaintextPassword\"\n          >\n            <Form.Label column sm=\"2\">\n              Department\n            </Form.Label>\n            <Col sm=\"10\">\n              <FloatingLabel\n                controlId=\"floatingSelect\"\n                label=\"Select a department\"\n              >\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"department\"\n                  disabled={isDisabled}\n                  onChange={handleChange}\n                >\n                  <option></option>\n                  <option value=\"CSE\">CSE</option>\n                  <option value=\"ECE\">ECE</option>\n                  <option value=\"EEE\">EEE</option>\n                  <option value=\"CIVIL\">CIVIL</option>\n                  <option value=\"MECH\">MECH</option>\n                  <option value=\"PHY\">PHY</option>\n                  <option value=\"CHEM\">CHEM</option>\n                  <option value=\"MATH\">MATH</option>\n                  <option value=\"OFFICE\">OFFICE</option>\n                  <option value=\"MBA\">MBA</option>\n                  <option value=\"MCA\">MCA</option>\n                </Form.Select>{\" \"}\n                <p className=\"text-danger\">{formErrors.department}</p>\n              </FloatingLabel>\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form.Group>\n          <hr />\n        </Form>\n        <div className=\"dropdown\">\n          <label>Filter staff by department</label>\n          <select\n            className=\"btn btn-light dropdown-toggle\"\n            onChange={filterDepartment}\n            label=\"Select Department to view staff\"\n          >\n            <option className=\"dropdown-item\" value=\"ALL\">\n              ALL\n            </option>\n            <option className=\"dropdown-item\" value=\"CSE\">\n              CSE\n            </option>\n            <option className=\"dropdown-item\" value=\"ECE\">\n              ECE\n            </option>\n            <option className=\"dropdown-item\" value=\"EEE\">\n              EEE\n            </option>\n            <option className=\"dropdown-item\" value=\"CIVIL\">\n              CIVIL\n            </option>\n            <option className=\"dropdown-item\" value=\"MECH\">\n              MECH\n            </option>\n            <option className=\"dropdown-item\" value=\"PHY\">\n              PHY\n            </option>\n            <option className=\"dropdown-item\" value=\"CHEM\">\n              CHEM\n            </option>\n            <option className=\"dropdown-item\" value=\"MATH\">\n              MATH\n            </option>\n            <option className=\"dropdown-item\" value=\"OFFICE\">\n              OFFICE\n            </option>\n            <option className=\"dropdown-item\" value=\"MBA\">\n              MBA\n            </option>\n            <option className=\"dropdown-item\" value=\"MCA\">\n              MCA\n            </option>\n          </select>\n        </div>\n        <div style={{ overflowX: \"auto\" }}>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Staff ID</th>\n                <th>Designation</th>\n                <th>Full Name</th>\n                <th>Email </th>\n                <th>Phone Number</th>\n                <th>Role</th>\n                <th>Type</th>\n                <th>Leaves remaining</th>\n                <th>Department</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredArr?.map((user) => {\n                return (\n                  <tr key={user.staffId}>\n                    {user.role !== \"Admin\" && (\n                      <>\n                        <td>{user.staffId}</td>\n                        <td>{user.designation}</td>\n                        <td>{user.staffName}</td>\n                        <td>{user.email}</td>\n                        <td>{user.phnumber}</td>\n                        <td>{user.role}</td>\n                        <td>{user.type}</td>\n                        <td>\n                          {user.type === \"Regular\" ? (\n                            <span>\n                              {user.regularStaffLeaves}\n                            </span>\n                          ) : (\n                            <span>{user.probationStaffLeaves}</span>\n                          )}\n                        </td>\n                        <td\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <span>{user.department}</span>\n                          <span onClick={() => deleteUserFrontend(user)}>\n                            <DeleteOutlineTwoToneIcon />\n                          </span>\n                        </td>\n                      </>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Create;\n","export default __webpack_public_path__ + \"static/media/jgi.b955fc55.png\";","import React, { useContext, useEffect, useState } from \"react\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport logo from \"./jgi.png\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction Login() {\n  const userContext = useContext(LeaveContext);\n  const navigate = useNavigate();\n  const { login } = userContext;\n  const [user, setUser] = useState({});\n\n  const [formErrors, setFormErrors] = useState({});\n  useEffect(() => {\n    localStorage.removeItem(\"storedUser\");\n    const reloadCount = sessionStorage.getItem(\"reloadCount\");\n    if (reloadCount < 1) {\n      sessionStorage.setItem(\"reloadCount\", String(reloadCount + 1));\n      window.location.reload();\n    } else {\n      sessionStorage.removeItem(\"reloadCount\");\n    }\n  }, []);\n\n  const handleOnChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    setFormErrors(validate(user));\n    if (user.email && user.password) {\n      const res = await login(user);\n\n      if (res) {\n        const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n        if (localUserDetails?.success) {\n          const userDets = localUserDetails?.user;\n          if (\n            userDets?.role === \"Staff\" ||\n            userDets?.role === \"Hod\" ||\n            userDets?.role === \"Principal\"\n          ) {\n            navigate(\"/\");\n          } else if (userDets?.role === \"Admin\") {\n            navigate(\"/admin\");\n          }\n        } else if (user.email && user.password) {\n          toast.error(res.msg);\n        }\n      } else {\n        toast.error(\"internal server error\");\n      }\n    }\n  };\n  const validate = (values) => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = \"Email is required\";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    }\n    return errors;\n  };\n\n  return (\n    <div className=\"vertical-center\">\n      <img className=\"logo\" src={logo} alt=\"\" />\n      <div className=\" loginContainer\">\n        <form className=\"requires-validation\" onSubmit={handleOnSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n              Email address <span className=\"text-danger\"> *</span>\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleOnChange}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n            />\n            <p className=\"text-danger\">{formErrors.email}</p>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n              Password <span className=\"text-danger\"> *</span>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleOnChange}\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n            />\n            <p className=\"text-danger\">{formErrors.password}</p>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../../index.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction Principal() {\n  const navigate = useNavigate();\n  const userContext = useContext(LeaveContext);\n  const [userChange, setuserChange] = useState(false);\n  const [filteredArr, setFilteredArr] = useState([]);\n  const { userArr, getusers } = userContext;\n  useEffect(() => {\n    if (userDets?.role !== \"Principal\") {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    async function callUserApi() {\n      if (userDets?.role === \"Principal\") {\n        const response = await getusers();\n        // console.log(response);\n        if (response) {\n          setFilteredArr(response);\n        } else {\n          toast.error(\"Internal Server Error\");\n        }\n      }\n    }\n    callUserApi();\n    // eslint-disable-next-line\n  }, []);\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n\n  const filterDepartment = (e) => {\n    // console.log(e.target.value);\n    if (e.target.value === \"ALL\") {\n      setFilteredArr(userArr);\n    } else {\n      let newArr = userArr?.filter(\n        (user) => user.department === e.target.value\n      );\n      setFilteredArr(newArr);\n      setuserChange(!userChange);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container center\">\n        <h1\n          className=\"my-4 text-center \"\n          style={{ border: \"1px solid black\", padding: \"1rem\" }}\n        >\n          Jain College of Engineering Staff Details\n        </h1>\n        <div className=\"contents\">\n          <div className=\"dropdown\">\n            <label>Filter staff by department : </label>\n            <select\n              className=\"btn btn-light dropdown-toggle\"\n              onChange={filterDepartment}\n              label=\"Select Department to view staff\"\n            >\n              <option className=\"dropdown-item\" value=\"ALL\">\n                ALL\n              </option>\n              <option className=\"dropdown-item\" value=\"CSE\">\n                CSE\n              </option>\n              <option className=\"dropdown-item\" value=\"ECE\">\n                ECE\n              </option>\n              <option className=\"dropdown-item\" value=\"EEE\">\n                EEE\n              </option>\n              <option className=\"dropdown-item\" value=\"CIV\">\n                CIV\n              </option>\n              <option className=\"dropdown-item\" value=\"PHY\">\n                PHY\n              </option>\n              <option className=\"dropdown-item\" value=\"CHEM\">\n                CHEM\n              </option>\n              <option className=\"dropdown-item\" value=\"MATH\">\n                MATH\n              </option>\n              <option className=\"dropdown-item\" value=\"OFFICE\">\n                OFFICE\n              </option>\n              <option className=\"dropdown-item\" value=\"MBA\">\n                MBA\n              </option>\n              <option className=\"dropdown-item\" value=\"MCA\">\n                MCA\n              </option>\n            </select>\n          </div>\n          <div style={{ overflowX: \"auto\" }}>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Staff ID</th>\n                  <th>Designation</th>\n                  <th>Full Name</th>\n                  <th>Email </th>\n                  <th>Phone Number</th>\n                  <th>Role</th>\n                  <th>Type</th>\n                  <th>Leaves remaining</th>\n                  <th>Department</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredArr.map((user) => {\n                  return (\n                    <tr key={user.staffId}>\n                      {user.role !== \"Principal\" && user.role !== \"Admin\" && (\n                        <>\n                          <td>{user.staffId}</td>\n                          <td>{user.designation}</td>\n                          <td>{user.staffName}</td>\n                          <td>{user.email}</td>\n                          <td>{user.phnumber}</td>\n                          <td>{user.role}</td>\n                          <td>{user.type}</td>\n                          <td>\n                            {user.type === \"Regular\" ? (\n                              <span>\n                                {user.regularStaffLeaves}\n                              </span>\n                            ) : (\n                              <span>{user.probationStaffLeaves}</span>\n                            )}\n                          </td>\n                          <td>\n                            <span>{user.department}</span>\n                          </td>\n                        </>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Principal;\n","import { Table } from \"react-bootstrap\";\nimport { useContext, useEffect, useState } from \"react\";\nimport LeaveContext from \"../context/LeaveContext\";\nimport \"../index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport CheckCircleOutlineOutlinedIcon from \"@mui/icons-material/CheckCircleOutlineOutlined\";\nimport PendingIcon from \"@mui/icons-material/Pending\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nfunction LeaveRequest() {\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n\n  const [userChange, setuserChange] = useState(false);\n  const [modalDetails, setModalDetails] = useState({});\n  const [leaveReqSubStaffDetails, setLeaveReqSubStaffDetails] = useState([]);\n  const [detailedLeaveReq, setDetailedLeaveReq] = useState({});\n\n  const userContext = useContext(LeaveContext);\n  const navigate = useNavigate();\n  const {\n    recievedLeaveArr,\n    recievedRequests,\n    requestedLeavesArr,\n    myRequestedLeaves,\n    staffStatus,\n    requestesForHod,\n    requestesForHodArr,\n    getAllLeaves,\n    allLeavesArr,\n  } = userContext;\n  useEffect(() => {\n    if (userDets?.role === \"Admin\" || !userDets?.role) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (\n      userDets?.role === \"Staff\" ||\n      userDets?.role === \"Hod\" ||\n      userDets?.role === \"Principal\"\n    ) {\n      myRequestedLeaves(userDets?._id);\n    }\n    if (userDets?.role === \"Hod\") {\n      requestesForHod(userDets?.department);\n      recievedRequests(userDets?.staffName);\n    } else if (userDets?.role === \"Staff\") {\n      console.log(userDets.staffName);\n      recievedRequests(userDets?.staffName);\n    }\n\n    // eslint-disable-next-line\n  }, [userChange]);\n  const updatedHodArr = [...requestesForHodArr, ...recievedLeaveArr];\n  const uniqueArr = [\n    ...updatedHodArr\n      .reduce((map, obj) => map.set(obj._id, obj), new Map())\n      .values(),\n  ];\n  console.log(uniqueArr);\n\n  useEffect(() => {\n    if (userDets?.role === \"Principal\") getAllLeaves();\n    // eslint-disable-next-line\n  }, []);\n  const todaysDate = new Date();\n\n  let updatedArr = [];\n  allLeavesArr?.forEach((leave) => {\n    const startDateObj = new Date(leave.dateStart);\n    const endDateObj = new Date(leave.dateEnd);\n\n    if (\n      todaysDate.getDate() <= endDateObj.getDate() &&\n      todaysDate.getDate() >= startDateObj.getDate()\n    ) {\n      updatedArr.push(leave);\n    }\n  });\n  let count = 0;\n  const populateModal = (modalDeets) => {\n    setModalDetails(modalDeets);\n  };\n  const populateSubStaffDetailsModal = (leaveReq) => {\n    setLeaveReqSubStaffDetails(leaveReq.subStaffArr);\n  };\n  const populateDetailedView = (leaveReq) => {\n    setDetailedLeaveReq(leaveReq);\n  };\n\n  return (\n    <div className=\"leaveReqDiv\">\n      <div className=\"myRequests\" style={{ overflowX: \"auto\" }}>\n        <div>\n          <h1>My leave requests</h1>\n          <Table striped bordered hover>\n            <thead>\n              <tr className=\"theads\">\n                <th>S.No</th>\n                <th>Type</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Staff-status</th>\n                {userDets?.role === \"Staff\" ? (\n                  <th>Hod-status</th>\n                ) : (\n                  <th>Admin-status</th>\n                )}\n                <th>View Leave</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[...requestedLeavesArr].reverse().map((leaveReq) => {\n                return (\n                  <tr className=\"theads\" key={leaveReq._id}>\n                    <td>{(count += 1)}</td>\n                    <td>{leaveReq.type}</td>\n                    <td>\n                      {new Date(leaveReq.dateStart)\n                        .toLocaleDateString(\"en-GB\", {\n                          day: \"2-digit\",\n                          month: \"short\",\n                          year: \"numeric\",\n                        })\n                        .replace(/ /g, \"-\")}\n                    </td>\n                    <td>\n                      {new Date(leaveReq.dateEnd)\n                        .toLocaleDateString(\"en-GB\", {\n                          day: \"2-digit\",\n                          month: \"short\",\n                          year: \"numeric\",\n                        })\n                        .replace(/ /g, \"-\")}\n                    </td>\n                    <td>\n                      {leaveReq.byStaff !== 1 && (\n                        <>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#byStaffApproval\"\n                            onClick={() =>\n                              populateSubStaffDetailsModal(leaveReq)\n                            }\n                          >\n                            view\n                          </button>\n\n                          <div\n                            className=\"modal fade\"\n                            id=\"byStaffApproval\"\n                            tabIndex=\"-1\"\n                            aria-labelledby=\"byStaffApprovalLabel\"\n                            aria-hidden=\"true\"\n                          >\n                            <div className=\"modal-dialog\">\n                              <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                  <h5\n                                    className=\"modal-title\"\n                                    id=\"byStaffApprovalLabel\"\n                                  >\n                                    Your substitute staff requests\n                                  </h5>\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn-close\"\n                                    data-bs-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                  ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                  {leaveReqSubStaffDetails?.map((item) => {\n                                    return (\n                                      <div\n                                        key={item.name}\n                                        style={{ display: \"flex\" }}\n                                      >\n                                        <h5>\n                                          Name:<span>{item?.name}</span>\n                                        </h5>\n                                        <h5 className=\"mx-2\">\n                                          Status:\n                                          {(item?.status === 1 && (\n                                            <span className=\"text-success fw-bold\">\n                                              <CheckCircleOutlineOutlinedIcon />\n                                            </span>\n                                          )) ||\n                                            (item?.status === 0 && (\n                                              <span className=\"text-warning fw-bold\">\n                                                <PendingIcon />\n                                              </span>\n                                            )) ||\n                                            (item?.status === 2 && (\n                                              <span className=\"text-danger fw-bold\">\n                                                <CancelIcon />\n                                              </span>\n                                            ))}\n                                        </h5>\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                                <div className=\"modal-footer\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-bs-dismiss=\"modal\"\n                                  >\n                                    Close\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </>\n                      )}\n                      {leaveReq?.byStaff === 1 && (\n                        <span className=\"text-success fw-bold\">Approved</span>\n                      )}\n                    </td>\n                    <td>\n                      {userDets?.role === \"Staff\"\n                        ? leaveReq.byHod === 0 && (\n                            <span className=\"text-warning fw-bold\">\n                              Pending...\n                            </span>\n                          )\n                        : leaveReq.byAdmin === 0 && (\n                            <span className=\"text-warning fw-bold\">\n                              Pending...\n                            </span>\n                          )}\n                      {userDets?.role === \"Staff\"\n                        ? leaveReq.byHod === 1 && (\n                            <span className=\"text-success fw-bold\">\n                              Approved\n                            </span>\n                          )\n                        : leaveReq.byAdmin === 1 && (\n                            <span className=\"text-success fw-bold\">\n                              Approved\n                            </span>\n                          )}\n                      {userDets?.role !== \"Hod\"\n                        ? leaveReq.byHod === 2 && (\n                            <span className=\"text-danger fw-bold\">\n                              Declined\n                            </span>\n                          )\n                        : leaveReq.byAdmin === 2 && (\n                            <span className=\"text-danger fw-bold\">\n                              Declined\n                            </span>\n                          )}\n                    </td>\n                    <td>\n                      <>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#viewInDetail\"\n                          onClick={() => populateDetailedView(leaveReq)}\n                        >\n                          view\n                        </button>\n\n                        <div\n                          className=\"modal fade\"\n                          id=\"viewInDetail\"\n                          tabIndex=\"-1\"\n                          aria-labelledby=\"viewInDetailLabel\"\n                          aria-hidden=\"true\"\n                        >\n                          <div className=\"modal-dialog\">\n                            <div className=\"modal-content\">\n                              <div className=\"modal-header\">\n                                <h5\n                                  className=\"modal-title\"\n                                  id=\"exampleModalLabel\"\n                                >\n                                  Leave request details\n                                </h5>\n                                <button\n                                  type=\"button\"\n                                  className=\"btn-close\"\n                                  data-bs-dismiss=\"modal\"\n                                  aria-label=\"Close\"\n                                ></button>\n                              </div>\n                              <div\n                                className=\"modal-body\"\n                                style={{ textAlign: \"left\" }}\n                              >\n                                <h5>\n                                  Subject:\n                                  <span>{detailedLeaveReq?.subject}</span>\n                                </h5>\n                                <h5>\n                                  Description:\n                                  <span>{detailedLeaveReq?.body}</span>\n                                </h5>\n                                <h5>\n                                  Type:\n                                  <span>{detailedLeaveReq?.type}</span>\n                                </h5>\n                                <h5>\n                                  From:\n                                  <span>\n                                    {new Date(\n                                      detailedLeaveReq?.dateStart\n                                    ).toDateString()}\n                                  </span>\n                                </h5>\n                                <h5>\n                                  To:\n                                  <span>\n                                    {new Date(\n                                      detailedLeaveReq?.dateEnd\n                                    ).toDateString()}\n                                  </span>\n                                </h5>\n                                <h5>\n                                  No. of days:\n                                  <span>{detailedLeaveReq?.noOfDays}</span>\n                                </h5>\n                              </div>\n                              <div className=\"modal-footer\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-secondary\"\n                                  data-bs-dismiss=\"modal\"\n                                >\n                                  Close\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n\n      {userDets?.role !== \"Principal\" ? (\n        <>\n          <div className=\"recievedRequests\" style={{ overflowX: \"auto\" }}>\n            <h1>Substitution requests</h1>\n            <div></div>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Designation</th>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Start date</th>\n                  <th>End date</th>\n                  <th>Accept/Decline</th>\n                </tr>\n              </thead>\n              {userDets?.role === \"Staff\" ? (\n                <>\n                  <tbody>\n                    {[...recievedLeaveArr].reverse().map((leaveReq) => {\n                      // console.log(modalDetails?.byStaff);\n                      return (\n                        <tr key={leaveReq._id}>\n                          <td className=\"center\">{leaveReq.designation}</td>\n                          <td className=\"center\">{leaveReq.name}</td>\n                          <td className=\"center\">{leaveReq.type}</td>\n                          <td className=\"center\">\n                            {new Date(leaveReq.dateStart)\n                              .toLocaleDateString(\"en-GB\", {\n                                day: \"2-digit\",\n                                month: \"short\",\n                                year: \"numeric\",\n                              })\n                              .replace(/ /g, \"-\")}\n                          </td>\n                          <td className=\"center\">\n                            {new Date(leaveReq.dateEnd)\n                              .toLocaleDateString(\"en-GB\", {\n                                day: \"2-digit\",\n                                month: \"short\",\n                                year: \"numeric\",\n                              })\n                              .replace(/ /g, \"-\")}\n                          </td>\n\n                          <td\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-around\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            {leaveReq.subStaffArr.some((element) => {\n                              if (element.name === userDets.staffName) {\n                                if (element.status === 0) return true;\n                              }\n                              return false;\n                            }) ? (\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary \"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#bbb\"\n                                onClick={() => populateModal(leaveReq)}\n                              >\n                                View\n                              </button>\n                            ) : (\n                              <span>\n                                {leaveReq.subStaffArr.some((user) => {\n                                  if (user.name === userDets.staffName) {\n                                    if (user.status === 1) {\n                                      return true;\n                                    }\n                                  }\n                                  return false;\n                                }) ? (\n                                  <span className=\"text-success\">Accepted</span>\n                                ) : (\n                                  <span className=\"text-danger\">Declined</span>\n                                )}\n                              </span>\n                            )}\n\n                            <div\n                              className=\"modal fade\"\n                              id=\"bbb\"\n                              tabIndex=\"-1\"\n                              aria-labelledby=\"exampleModalLabel\"\n                              aria-hidden=\"true\"\n                            >\n                              <div className=\"modal-dialog\">\n                                <div className=\"modal-content\">\n                                  <div className=\"modal-header\">\n                                    <h5\n                                      className=\"modal-title\"\n                                      id=\"exampleModalLabel\"\n                                    >\n                                      Leave request details\n                                    </h5>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn-close\"\n                                      data-bs-dismiss=\"modal\"\n                                      aria-label=\"Close\"\n                                    ></button>\n                                  </div>\n                                  <div className=\"modal-body \">\n                                    <h5>\n                                      Name:<span>{modalDetails?.name}</span>\n                                    </h5>\n                                    <h5>\n                                      Subject:\n                                      <span>{modalDetails?.subject}</span>\n                                    </h5>\n                                    <h5>\n                                      Description:\n                                      <span>{modalDetails?.body}</span>\n                                    </h5>\n                                    <h5>\n                                      From:\n                                      <span>\n                                        {new Date(\n                                          modalDetails?.dateStart\n                                        ).toDateString()}\n                                      </span>\n                                    </h5>\n                                    <h5>\n                                      To:\n                                      <span>\n                                        {new Date(\n                                          modalDetails?.dateEnd\n                                        ).toDateString()}\n                                      </span>\n                                    </h5>\n                                    <h5>\n                                      No. of days:\n                                      <span>{modalDetails?.noOfDays}</span>\n                                    </h5>\n                                  </div>\n                                  <div className=\"modal-footer\">\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-secondary\"\n                                      data-bs-dismiss=\"modal\"\n                                      onClick={async () => {\n                                        const res = await staffStatus(\n                                          modalDetails?._id,\n                                          1,\n                                          userDets?.role,\n                                          modalDetails?.noOfDays,\n                                          userDets?.staffName\n                                        );\n                                        if (res) {\n                                          setuserChange(!userChange);\n                                          toast.info(\"Accepted\");\n                                        } else {\n                                          toast.danger(\"Internal server error\");\n                                        }\n                                      }}\n                                    >\n                                      Accept\n                                    </button>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-primary\"\n                                      data-bs-dismiss=\"modal\"\n                                      onClick={async () => {\n                                        const res = await staffStatus(\n                                          modalDetails?._id,\n                                          2,\n                                          userDets?.role,\n                                          modalDetails?.noOfDays,\n                                          userDets?.staffName\n                                        );\n                                        if (res) {\n                                          setuserChange(!userChange);\n                                          toast.info(\"Declined\");\n                                        } else {\n                                          toast.danger(\"Internal server error\");\n                                        }\n                                      }}\n                                    >\n                                      Decline\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </>\n              ) : (\n                <>\n                  <tbody>\n                    {[...uniqueArr].reverse().map((leaveReq) => {\n                      return (\n                        <tr key={leaveReq._id}>\n                          {leaveReq.userId !== userDets._id && (\n                            <>\n                              <td className=\"center\">{leaveReq.designation}</td>\n                              <td className=\"center\">{leaveReq.name}</td>\n                              <td className=\"center\">{leaveReq.type}</td>\n                              <td className=\"center\">\n                                {new Date(leaveReq.dateStart)\n                                  .toLocaleDateString(\"en-GB\", {\n                                    day: \"2-digit\",\n                                    month: \"short\",\n                                    year: \"numeric\",\n                                  })\n                                  .replace(/ /g, \"-\")}\n                              </td>\n                              <td className=\"center\">\n                                {new Date(leaveReq.dateEnd)\n                                  .toLocaleDateString(\"en-GB\", {\n                                    day: \"2-digit\",\n                                    month: \"short\",\n                                    year: \"numeric\",\n                                  })\n                                  .replace(/ /g, \"-\")}\n                              </td>\n                              <td\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"space-around\",\n                                  cursor: \"pointer\",\n                                }}\n                              >\n                                {leaveReq.byHod === 0 ? (\n                                  <button\n                                    type=\"button\"\n                                    // ref={ref}\n                                    className=\"btn btn-primary \"\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#aaa\"\n                                    onClick={() => populateModal(leaveReq)}\n                                  >\n                                    View\n                                  </button>\n                                ) : (\n                                  <span>\n                                    {leaveReq.byHod === 1 ? (\n                                      <span className=\"text-success\">\n                                        Accepted\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-danger\">\n                                        Declined\n                                      </span>\n                                    )}\n                                  </span>\n                                )}\n                                <div\n                                  className=\"modal fade\"\n                                  id=\"aaa\"\n                                  tabIndex=\"-1\"\n                                  aria-labelledby=\"exampleModalLabel\"\n                                  aria-hidden=\"true\"\n                                >\n                                  <div className=\"modal-dialog\">\n                                    <div className=\"modal-content\">\n                                      <div className=\"modal-header\">\n                                        <h5\n                                          className=\"modal-title\"\n                                          id=\"exampleModalLabel\"\n                                        >\n                                          Leave request details\n                                        </h5>\n                                        <button\n                                          type=\"button\"\n                                          className=\"btn-close\"\n                                          data-bs-dismiss=\"modal\"\n                                          aria-label=\"Close\"\n                                        ></button>\n                                      </div>\n                                      <div className=\"modal-body\">\n                                        <h5>\n                                          Name:<span>{modalDetails?.name}</span>\n                                        </h5>\n                                        <h5>\n                                          Subject:\n                                          <span>{modalDetails?.subject}</span>\n                                        </h5>\n                                        <h5>\n                                          Description:\n                                          <span>{modalDetails?.body}</span>\n                                        </h5>\n                                        <h5>\n                                          From:\n                                          <span>\n                                            {new Date(\n                                              modalDetails?.dateStart\n                                            ).toDateString()}\n                                          </span>\n                                        </h5>\n                                        <h5>\n                                          To:\n                                          <span>\n                                            {new Date(\n                                              modalDetails?.dateEnd\n                                            ).toDateString()}\n                                          </span>\n                                        </h5>\n                                        <h5>\n                                          No. of days:\n                                          <span>{modalDetails?.noOfDays}</span>\n                                        </h5>\n                                      </div>\n                                      <div className=\"modal-footer\">\n                                        <button\n                                          type=\"button\"\n                                          className=\"btn btn-secondary\"\n                                          data-bs-dismiss=\"modal\"\n                                          onClick={() => {\n                                            staffStatus(\n                                              modalDetails._id,\n                                              1,\n                                              userDets?.role,\n                                              modalDetails?.noOfDays,\n                                              userDets?.staffName\n                                            );\n                                            setuserChange(!userChange);\n                                            toast.info(\"Accepted\");\n                                          }}\n                                        >\n                                          Accept\n                                        </button>\n                                        <button\n                                          type=\"button\"\n                                          className=\"btn btn-primary\"\n                                          data-bs-dismiss=\"modal\"\n                                          onClick={() => {\n                                            staffStatus(\n                                              modalDetails._id,\n                                              2,\n                                              userDets?.role,\n                                              modalDetails?.noOfDays,\n                                              userDets?.staffName\n                                            );\n                                            setuserChange(!userChange);\n                                            toast.info(\"Declined\");\n                                          }}\n                                        >\n                                          Decline\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                            </>\n                          )}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </>\n              )}\n            </Table>\n          </div>\n        </>\n      ) : (\n        <div\n          className=\"card\"\n          style={{\n            width: \"20rem\",\n            height: \"5rem\",\n            margin: \"2rem 1rem 1rem 1rem\",\n          }}\n        >\n          <div className=\"card-header text-center\">\n            {new Date().toDateString()}\n          </div>\n          <div className=\"card card-body\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#onLeaveToday\"\n            >\n              View today's leaves\n            </button>\n            <div\n              className=\"modal fade\"\n              id=\"onLeaveToday\"\n              tabIndex=\"-1\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div className=\"modal-dialog modal-fullscreen\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                      Staff on Leave today\n                    </h5>\n                    <button\n                      type=\"button\"\n                      className=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div className=\"modal-body text-center\">\n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>Designation</th>\n                          <th>Name</th>\n                          <th>Subject</th>\n                          <th>Start date</th>\n                          <th>End date</th>\n                          <th>Number of days</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {updatedArr.map((leave) => {\n                          return (\n                            <tr key={leave._id}>\n                              <td>{leave.designation}</td>\n                              <td>{leave.name}</td>\n                              <td>{leave.subject}</td>\n                              <td>\n                                {new Date(leave.dateStart).toDateString()}\n                              </td>\n                              <td>{new Date(leave.dateEnd).toDateString()}</td>\n                              <td>{leave.noOfDays}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default LeaveRequest;\n","import LeaveRequest from \"../../components/LeaveRequest\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nfunction Staff() {\n  const navigate = useNavigate();\n  // const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  // const userDets = localUserDetails?.user;\n  useEffect(() => {\n    if (!localStorage.getItem(\"storedUser\")) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <LeaveRequest />\n    </>\n  );\n}\n\nexport default Staff;\n","import \"../../index.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction Hodrequests() {\n  const navigate = useNavigate();\n  const [modalDetails, setModalDetails] = useState({});\n  const userContext = useContext(LeaveContext);\n  const [userChange, setuserChange] = useState(false);\n\n  const { requestsForAdmin, requestsForAdminArr, staffStatus } = userContext;\n\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n  useEffect(() => {\n    if (userDets?.role !== \"Admin\") {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (userDets.role === \"Admin\") requestsForAdmin();\n    // eslint-disable-next-line\n  }, [userChange]);\n  const populateModal = (modalDeets) => {\n    setModalDetails(modalDeets);\n  };\n  // console.log(requestsForAdminArr);\n  return (\n    <>\n      <h1 className=\"text-center mt-4\">Incoming leave applications</h1>\n      <div className=\"container mt-3\" style={{ overflowX: \"auto\" }}>\n        <Table striped bordered hover className=\"text-center\">\n          <thead>\n            <tr className=\"theads\">\n              <th>Designation</th>\n              <th>Full Name</th>\n              <th>Type</th>\n              <th>Start date</th>\n              <th>End date</th>\n              <th>Accept/Decline</th>\n            </tr>\n          </thead>\n          <tbody>\n            {requestsForAdminArr.map((leaveReq) => {\n              return (\n                <tr key={leaveReq._id}>\n                  <td className=\"center\">{leaveReq.designation}</td>\n                  <td className=\"center\">{leaveReq.name}</td>\n                  <td className=\"center\">{leaveReq.type}</td>\n                  <td className=\"center\">\n                    {new Date(leaveReq.dateStart)\n                      .toLocaleDateString(\"en-GB\", {\n                        day: \"2-digit\",\n                        month: \"short\",\n                        year: \"numeric\",\n                      })\n                      .replace(/ /g, \"-\")}\n                  </td>\n                  <td className=\"center\">\n                    {new Date(leaveReq.dateEnd)\n                      .toLocaleDateString(\"en-GB\", {\n                        day: \"2-digit\",\n                        month: \"short\",\n                        year: \"numeric\",\n                      })\n                      .replace(/ /g, \"-\")}\n                  </td>\n                  <td\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-around\",\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    {leaveReq.byAdmin === 0 ? (\n                      <button\n                        type=\"button\"\n                        // ref={ref}\n                        className=\"btn btn-primary \"\n                        data-bs-toggle=\"modal\"\n                        data-bs-target=\"#aaa\"\n                        onClick={() => populateModal(leaveReq)}\n                      >\n                        View\n                      </button>\n                    ) : (\n                      <span>\n                        {leaveReq.byAdmin === 1 ? (\n                          <span className=\"text-success\">Accepted</span>\n                        ) : (\n                          <span className=\"text-danger\">Declined</span>\n                        )}\n                      </span>\n                    )}\n                    <div\n                      className=\"modal fade\"\n                      id=\"aaa\"\n                      tabIndex=\"-1\"\n                      aria-labelledby=\"exampleModalLabel\"\n                      aria-hidden=\"true\"\n                    >\n                      <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                              Leave request details\n                            </h5>\n                            <button\n                              type=\"button\"\n                              className=\"btn-close\"\n                              data-bs-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                            ></button>\n                          </div>\n                          <div className=\"modal-body\">\n                            <h5>\n                              Name:<span>{modalDetails?.name}</span>\n                            </h5>\n                            <h5>\n                              Subject:<span>{modalDetails?.subject}</span>\n                            </h5>\n                            <h5>\n                              Description:<span>{modalDetails?.body}</span>\n                            </h5>\n                            <h5>\n                              Type:<span>{modalDetails?.type}</span>\n                            </h5>\n                            <h5>\n                              From:\n                              <span>\n                                {new Date(modalDetails?.dateStart)\n                                  .toLocaleDateString(\"en-GB\", {\n                                    day: \"2-digit\",\n                                    month: \"short\",\n                                    year: \"numeric\",\n                                  })\n                                  .replace(/ /g, \"-\")}\n                              </span>\n                            </h5>\n                            <h5>\n                              To:\n                              <span>\n                                {new Date(modalDetails?.dateEnd)\n                                  .toLocaleDateString(\"en-GB\", {\n                                    day: \"2-digit\",\n                                    month: \"short\",\n                                    year: \"numeric\",\n                                  })\n                                  .replace(/ /g, \"-\")}\n                              </span>\n                            </h5>\n                            <h5>\n                              No. of days:<span>{modalDetails?.noOfDays}</span>\n                            </h5>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-secondary\"\n                              data-bs-dismiss=\"modal\"\n                              onClick={async () => {\n                                const res = await staffStatus(\n                                  modalDetails?._id,\n                                  1,\n                                  \"Admin\",\n                                  modalDetails?.noOfDays\n                                );\n                                if (res) {\n                                  setuserChange(!userChange);\n                                  toast.info(\"Accepted\");\n                                } else {\n                                  toast.danger(\"Internal server error\");\n                                }\n                              }}\n                            >\n                              Accept\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-primary\"\n                              data-bs-dismiss=\"modal\"\n                              onClick={async () => {\n                                const res = await staffStatus(\n                                  modalDetails?._id,\n                                  2,\n                                  \"Admin\",\n                                  modalDetails?.noOfDays\n                                );\n                                if (res) {\n                                  setuserChange(!userChange);\n                                  toast.info(\"Declined\");\n                                } else {\n                                  toast.danger(\"Internal server error\");\n                                }\n                              }}\n                            >\n                              Decline\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </>\n  );\n}\n\nexport default Hodrequests;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Button, FloatingLabel, Form } from \"react-bootstrap\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport \"../../index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\n\nfunction CreateLeave() {\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const navigate = useNavigate();\n  const userDets = localUserDetails?.user;\n  const [userChange, setuserChange] = useState(false);\n  const [totalLeaveDays, setTotalLeaveDays] = useState(0);\n  const [dateEndState, setDateEndState] = useState(null);\n  const [dateStartState, setDateStartState] = useState(null);\n  const [isEndDateDisabled, setIsEndDateDisabled] = useState(true);\n  const [isSubmitDisabled, setisSubmitDisabled] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [formErrors, setFormErrors] = useState({});\n  const multipleSubStaff = [];\n  const [leaveData, setLeaveData] = useState({\n    userId: userDets?._id,\n    designation: userDets?.designation,\n    department: userDets?.department,\n    name: userDets?.staffName,\n  });\n\n  //\n\n  useEffect(() => {\n    let start = new Date(leaveData.dateStart);\n    let finish = new Date(leaveData.dateEnd);\n    let dayMilliseconds = 1000 * 60 * 60 * 24;\n    let totalDays = 0;\n    while (start <= finish) {\n      totalDays++;\n      start = new Date(+start + dayMilliseconds);\n    }\n    let leaveCount = totalDays;\n    setTotalLeaveDays(leaveCount);\n\n    setLeaveData({ ...leaveData, noOfDays: leaveCount });\n\n    if (dateStartState !== null) {\n      setIsEndDateDisabled(false);\n    } else {\n      setIsEndDateDisabled(true);\n    }\n\n    if (userDets?.type === \"Regular\") {\n      if (\n        leaveData.type === \"Casual\" &&\n        totalLeaveDays > userDets.regularStaffLeaves\n      ) {\n        setisSubmitDisabled(true);\n      } else {\n        setisSubmitDisabled(false);\n      }\n    } else if (userDets.type === \"Probation\") {\n      if (\n        leaveData.type === \"Casual\" &&\n        totalLeaveDays > userDets.probationStaffLeaves\n      ) {\n        setisSubmitDisabled(true);\n      } else {\n        setisSubmitDisabled(false);\n      }\n    }\n    // eslint-disable-next-line\n  }, [dateEndState, dateStartState, totalLeaveDays, leaveData.type]);\n  useEffect(() => {\n    if (!userDets) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (userDets) getusers();\n    // eslint-disable-next-line\n  }, [userChange]);\n  const userContext = useContext(LeaveContext);\n  const { userArr, getusers, postLeaveDetails } = userContext;\n\n  const sendLeaveDetails = async (e) => {\n    e.preventDefault();\n    setFormErrors(validate(leaveData));\n    if (\n      !(\n        leaveData.subject &&\n        leaveData.body &&\n        leaveData.type &&\n        leaveData.dateStart &&\n        leaveData.dateEnd &&\n        leaveData.subStaffArr.length !== 0\n      )\n    )\n      return;\n    const res = await postLeaveDetails(leaveData);\n    if (res) {\n      toast.success(res.msg);\n    } else {\n      toast.error(\"Internal server error\");\n    }\n    setuserChange(!userChange);\n    clearFields(e);\n  };\n  const validate = (values) => {\n    const errors = {};\n    if (!values.subject) {\n      errors.subject = \"Subject is required\";\n    }\n    if (!values.type) {\n      errors.type = \"Type is required\";\n    }\n    if (!values.body) {\n      errors.body = \"Description is required\";\n    }\n    if (!values.dateStart) {\n      errors.dateStart = \"Start date is required\";\n    }\n    if (!values.subStaff) {\n      errors.subStaff = \"Substitue staff is required\";\n    }\n    if (!values.dateEnd) {\n      errors.dateEnd = \"End date is required\";\n    }\n    if (values.subStaffArr.length === 0) {\n      errors.subStaffArr = \"Select atleast one substitute staff\";\n    }\n    return errors;\n  };\n\n  const changeInputHandler = (e) => {\n    setLeaveData({ ...leaveData, [e.target.name]: e.target.value });\n\n    if (e.target.name === \"dateEnd\") {\n      setDateEndState(e.target.value);\n    }\n    if (e.target.name === \"dateStart\") {\n      setDateStartState(e.target.value);\n    }\n  };\n\n  const filteredArr = userArr.filter(\n    (user) =>\n      user?.role !== \"Principal\" &&\n      user?.role !== \"Admin\" &&\n      user?.staffName !== userDets?.staffName\n  );\n  const clearFields = (e) => {\n    Array.from(e.target).forEach((e) => (e.value = \"\"));\n    setLeaveData({\n      userId: userDets?._id,\n      department: userDets?.department,\n      name: userDets?.staffName,\n    });\n    setSelected([]);\n    setTotalLeaveDays(0);\n  };\n  //multiple select code:\n\n  const options = [];\n  filteredArr.map((user) => {\n    return options.push({\n      value: user.staffName,\n      label: user.staffName,\n    });\n  });\n\n  useEffect(() => {\n    selected.map((user) => {\n      return multipleSubStaff.push({ name: user.value, status: 0 });\n    });\n    setLeaveData({ ...leaveData, subStaffArr: multipleSubStaff });\n    // eslint-disable-next-line\n  }, [selected]);\n\n  return (\n    <>\n      <div className=\" leaveForm\">\n        {/* multiple select related code:  */}\n\n        <h1>Apply for a new leave</h1>\n        <hr />\n        <Form onSubmit={sendLeaveDetails}>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label className=\"fs-3\">Subject</Form.Label>\n            <Form.Control\n              name=\"subject\"\n              onChange={changeInputHandler}\n              type=\"text\"\n            />\n            <p className=\"text-danger\">{formErrors.subject}</p>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label className=\"fs-3\">\n              Description{\" \"}\n              <span className=\"fs-6\">\n                (Enter all the details of the leave including the reason and\n                timings for substitute teachers)\n              </span>\n            </Form.Label>\n            <Form.Control\n              onChange={changeInputHandler}\n              as=\"textarea\"\n              rows={3}\n              name=\"body\"\n            />\n            <p className=\"text-danger\">{formErrors.body}</p>\n          </Form.Group>\n          <Form.Label className=\"fs-3\">Type of leave</Form.Label>\n          <FloatingLabel\n            controlId=\"floatingSelect\"\n            label=\"Select type of leave\"\n          >\n            <Form.Select\n              aria-label=\"Floating label select example\"\n              onChange={changeInputHandler}\n              name=\"type\"\n            >\n              <option></option>\n              required\n              <option value={\"Duty\"}>Duty</option>\n              <option value={\"Casual\"}>Casual</option>\n            </Form.Select>\n            <p className=\"text-danger\">{formErrors.type}</p>\n          </FloatingLabel>\n          <div>\n            <label className=\"me-2 fs-4\">Start date:</label>\n            <input\n              name=\"dateStart\"\n              onChange={changeInputHandler}\n              className=\"mb-1\"\n              type=\"date\"\n            />\n            <span className=\"text-danger\">{formErrors.dateStart}</span>\n\n            <label className=\" ms-2 fs-4\">End date:</label>\n            <input\n              name=\"dateEnd\"\n              onChange={changeInputHandler}\n              className=\"mb-1\"\n              type=\"date\"\n              min={leaveData.dateStart}\n              disabled={isEndDateDisabled}\n            />\n            <span className=\"text-danger\">{formErrors.dateEnd}</span>\n\n            <label className=\" ms-2 fs-4\">\n              Number of days: {totalLeaveDays}\n            </label>\n            <span className=\"ms-2 fs-5\" id=\"noOfDays\" name=\"noOfDays\"></span>\n          </div>\n          <label className=\" my-2 fs-4\">Select substitute staff: </label>\n          <MultiSelect\n            options={options}\n            value={selected}\n            hasSelectAll={false}\n            onChange={setSelected}\n          />\n          <p className=\"text-danger\">{formErrors.subStaffArr}</p>\n\n          <Button\n            variant=\"primary\"\n            disabled={isSubmitDisabled}\n            className=\"mt-4\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nexport default CreateLeave;\n","export default __webpack_public_path__ + \"static/media/user.0d14c699.png\";","import { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport logo from \"./user.png\";\n\nimport { useNavigate } from \"react-router-dom\";\nfunction UserProfile() {\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!userDets) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"profileWrapper\"\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"5rem\" }}\n      >\n        <Card style={{ width: \"25rem\" }}>\n          <Card.Img className=\"profileIcon\" variant=\"top\" src={logo} />\n          <Card.Body>\n            <Card.Title>\n              <strong>Staff ID</strong>: {userDets?.staffId}\n            </Card.Title>\n            <Card.Title>\n              <strong>Designation</strong>: {userDets?.designation}\n            </Card.Title>\n            <Card.Title>\n              <strong>Name</strong>: {userDets?.staffName}\n            </Card.Title>\n            <Card.Title>\n              <strong>Phone Number</strong>: {userDets?.phnumber}\n            </Card.Title>\n            <Card.Title>\n              <strong>Email</strong>: {userDets?.email}\n            </Card.Title>\n            <Card.Title>\n              <strong>Role</strong>: {userDets?.role}\n            </Card.Title>\n            <Card.Title>\n              <strong>Joining date</strong>:{\" \"}\n              {new Date(userDets?.joiningDate).toDateString()}\n            </Card.Title>\n            {userDets?.type !== \"Regular\" ? (\n              <Card.Title>\n                <strong>Probation leaves remaining</strong>:{\" \"}\n                {userDets?.probationStaffLeaves}\n              </Card.Title>\n            ) : (\n              <>\n                <Card.Title>\n                  <strong>Leaves remaining</strong>:{\" \"}\n                  {userDets?.regularStaffLeaves}\n                </Card.Title>\n              </>\n            )}\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default UserProfile;\n","import { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\nimport \"../index.css\";\nimport { useRef } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction NavBar() {\n  const navigate = useNavigate();\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  useEffect(() => {\n    if (!localUserDetails) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  const userDets = localUserDetails?.user;\n\n  const [passwordDetails, setPasswordDetails] = useState({});\n\n  const password = useRef();\n  const passwordAgain = useRef();\n  const [formErrors, setFormErrors] = useState({});\n  const validate = (values) => {\n    const errors = {};\n    if (!values.oldPassword) {\n      errors.oldPassword = \"Old password is required\";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    }\n    return errors;\n  };\n\n  const changeHandler = (e) => {\n    setPasswordDetails({ ...passwordDetails, [e.target.name]: e.target.value });\n  };\n  const changePasswordSubmit = async (e) => {\n    setFormErrors(validate(passwordDetails));\n    if (passwordAgain.current.value !== password.current.value) {\n      toast.warning(\"New passwords do not match\");\n    } else {\n      try {\n        const json = await axios.put(\n          `http://localhost:4000/api/staff/${userDets._id}`,\n          passwordDetails,\n          {\n            headers: {\n              \"content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        if (json.data.success) {\n          toast.success(\"Password updated\");\n        } else if (passwordDetails.oldPassword && passwordDetails.password) {\n          toast.error(\"Incorrect old password\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return (\n    <>\n      {userDets && (\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand\n            className=\"mx-2\"\n            as={NavLink}\n            to={userDets?.role === \"Admin\" ? \"/admin\" : \"/\"}\n          >\n            Leave management\n          </Navbar.Brand>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            style={{ marginRight: \"0.7rem\" }}\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto mx-2\">\n              {/* <Nav.Link\n                as={NavLink}\n                to={userDets?.role === \"Admin\" ? \"/admin\" : \"/\"}\n              >\n                Home\n              </Nav.Link> */}\n              {userDets.role !== \"Admin\" && (\n                <Nav.Link as={NavLink} to=\"/profile\">\n                  My profile\n                </Nav.Link>\n              )}\n              {userDets?.role === \"Principal\" && (\n                <Nav.Link as={NavLink} to=\"/principal\">\n                  View Staff\n                </Nav.Link>\n              )}\n\n              <Nav.Link\n                as={NavLink}\n                to={\n                  userDets?.role === \"Admin\" ? \"/leaveRequests\" : \"/createLeave\"\n                }\n              >\n                {userDets?.role === \"Admin\"\n                  ? \"Incoming Leave Requests\"\n                  : \"Create a new leave\"}\n              </Nav.Link>\n\n              {userDets?.role === \"Hod\" && (\n                <Nav.Link as={NavLink} to={\"/viewStaff\"}>\n                  View Staff\n                </Nav.Link>\n              )}\n              {userDets?.role === \"Admin\" && (\n                <Nav.Link as={NavLink} to={\"/allLeaves\"}>\n                  View Staff Leaves\n                </Nav.Link>\n              )}\n            </Nav>\n            <strong className=\"navbar-text mx-2 helloNav\">\n              Hello, {userDets?.designation}. {userDets.staffName}\n            </strong>\n            <Button\n              className=\"d-flex mx-2 chpwd\"\n              variant=\"primary\"\n              onClick={() => {\n                localStorage.clear();\n                navigate(\"/login\");\n              }}\n            >\n              Logout\n            </Button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-2 chpwd\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#exampleModal\"\n            >\n              Change Password\n            </button>\n          </Navbar.Collapse>\n\n          <div\n            className=\"modal fade\"\n            id=\"exampleModal\"\n            tabIndex=\"-1\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                    Change Password\n                  </h5>\n                  <button\n                    type=\"button\"\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  ></button>\n                </div>\n                <div className=\"modal-body\">\n                  <label>Old Password:</label>\n                  <input\n                    name=\"oldPassword\"\n                    className=\"pwdBox\"\n                    onChange={changeHandler}\n                    type=\"text\"\n                  />\n                  <p className=\"text-danger\">{formErrors.oldPassword}</p>\n                  <label>New Password:</label>\n                  <input\n                    name=\"password\"\n                    onChange={changeHandler}\n                    type=\"password\"\n                    className=\"pwdBox\"\n                    ref={password}\n                  />\n                  <p className=\"text-danger\">{formErrors.password}</p>\n                  <label>New Password again:</label>\n                  <input\n                    ref={passwordAgain}\n                    type=\"password\"\n                    className=\"pwdBox\"\n                  />\n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-bs-dismiss=\"modal\"\n                  >\n                    Close\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={changePasswordSubmit}\n                  >\n                    Save changes\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Navbar>\n      )}\n    </>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction ViewStaff() {\n  const navigate = useNavigate();\n  const userContext = useContext(LeaveContext);\n  const [filteredArr, setFilteredArr] = useState([]);\n  const { getusers } = userContext;\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n  useEffect(() => {\n    if (userDets?.role !== \"Hod\") {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    async function callUserApi() {\n      if (userDets?.role === \"Hod\") {\n        const response = await getusers();\n        if (response) {\n          let newArr = response?.filter(\n            (user) => user.department === userDets.department\n          );\n          setFilteredArr(newArr);\n        } else {\n          toast.error(\"Internal Server Error\");\n        }\n      }\n    }\n    callUserApi();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"my-4 text-center\">{userDets.department} Staff</h1>\n      <div\n        className=\"container center\"\n        style={{\n          overflowX: \"auto\",\n        }}\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Staff ID</th>\n              <th>Designation</th>\n              <th>Full Name</th>\n              <th>Email </th>\n              <th>Phone Number</th>\n              <th>Role</th>\n              <th>Type</th>\n              <th>Leaves remaining</th>\n              <th>Department</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredArr.map((user) => {\n              return (\n                <tr key={user.staffId}>\n                  {user.role !== \"Principal\" && user.role !== \"Admin\" && (\n                    <>\n                      <td>{user.staffId}</td>\n                      <td>{user.designation}</td>\n                      <td>{user.staffName}</td>\n                      <td>{user.email}</td>\n                      <td>{user.phnumber}</td>\n                      <td>{user.role}</td>\n                      <td>{user.type}</td>\n                      <td>\n                        {user.type === \"Regular\" ? (\n                          <span>\n                            {user.regularStaffLeaves}\n                          </span>\n                        ) : (\n                          <span>{user.probationStaffLeaves}</span>\n                        )}\n                      </td>\n                      <td>\n                        <span>{user.department}</span>\n                      </td>\n                    </>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </>\n  );\n}\n\nexport default ViewStaff;\n","import { useNavigate } from \"react-router-dom\";\nimport LeaveContext from \"../../context/LeaveContext\";\nimport { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CheckCircleOutlineOutlinedIcon from \"@mui/icons-material/CheckCircleOutlineOutlined\";\nimport PendingIcon from \"@mui/icons-material/Pending\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Table } from \"react-bootstrap\";\n\nfunction AllLeaves() {\n  const [filteredArr, setFilteredArr] = useState([]);\n  const [leaveReqSubStaffDetails, setLeaveReqSubStaffDetails] = useState([]);\n  const [allLeavesArr, setAllLeavesArr] = useState([]);\n  const [detailedLeaveReq, setDetailedLeaveReq] = useState({});\n\n  const userContext = useContext(LeaveContext);\n  const { getAllLeavesforAdmin } = userContext;\n  const navigate = useNavigate();\n  const localUserDetails = JSON.parse(localStorage.getItem(\"storedUser\"));\n  const userDets = localUserDetails?.user;\n  useEffect(() => {\n    if (userDets?.role !== \"Admin\" || localUserDetails === null) {\n      navigate(\"/login\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    async function callUserApi() {\n      if (userDets?.role === \"Admin\") {\n        const response = await getAllLeavesforAdmin();\n        // console.log(response);\n        if (response) {\n          setAllLeavesArr(response);\n          setFilteredArr(response);\n        } else {\n          toast.error(\"Internal Server Error\");\n        }\n      }\n    }\n    callUserApi();\n    // eslint-disable-next-line\n  }, []);\n\n  const filterDepartment = (e) => {\n    // console.log(e.target.value);\n    if (e.target.value === \"ALL\") {\n      setFilteredArr(allLeavesArr);\n    } else {\n      let newArr = allLeavesArr?.filter(\n        (leave) =>\n          //   console.log(leave.department);\n          leave.department === e.target.value\n      );\n      //   console.log(newArr);\n      setFilteredArr(newArr);\n      //   setuserChange(!userChange);\n    }\n  };\n  const populateSubStaffDetailsModal = (leaveReq) => {\n    setLeaveReqSubStaffDetails(leaveReq.subStaffArr);\n  };\n  const populateDetailedView = (leaveReq) => {\n    setDetailedLeaveReq(leaveReq);\n  };\n\n  return (\n    <>\n      <h1 className=\"allLeavesh1\">Staff Leave Data</h1>\n      <div className=\"allLeavesContainer\">\n        <div className=\"dropdown\">\n          <label>Filter staff by department : </label>\n          <select\n            className=\"btn btn-light dropdown-toggle\"\n            onChange={filterDepartment}\n            label=\"Select Department to view staff\"\n          >\n            <option className=\"dropdown-item\" value=\"ALL\">\n              ALL\n            </option>\n            <option className=\"dropdown-item\" value=\"CSE\">\n              CSE\n            </option>\n            <option className=\"dropdown-item\" value=\"ECE\">\n              ECE\n            </option>\n            <option className=\"dropdown-item\" value=\"EEE\">\n              EEE\n            </option>\n            <option className=\"dropdown-item\" value=\"CIVIL\">\n              CIVIL\n            </option>\n            <option className=\"dropdown-item\" value=\"MECH\">\n              MECH\n            </option>\n            <option className=\"dropdown-item\" value=\"PHY\">\n              PHY\n            </option>\n            <option className=\"dropdown-item\" value=\"CHEM\">\n              CHEM\n            </option>\n            <option className=\"dropdown-item\" value=\"MATH\">\n              MATH\n            </option>\n            <option className=\"dropdown-item\" value=\"OFFICE\">\n              OFFICE\n            </option>\n            <option className=\"dropdown-item\" value=\"MBA\">\n              MBA\n            </option>\n            <option className=\"dropdown-item\" value=\"MCA\">\n              MCA\n            </option>\n          </select>\n        </div>\n        <div style={{ overflowX: \"auto\", textAlign: \"center\" }}>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Designation</th>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Start date</th>\n                <th>End date</th>\n                <th>Sub staff-status</th>\n                <th>Leave Status</th>\n                <th>View Leave</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[...filteredArr].reverse().map((leaveReq) => {\n                return (\n                  <tr className=\"theads\" key={leaveReq._id}>\n                    <td>{leaveReq.designation}</td>\n                    <td>{leaveReq.name}</td>\n                    <td>{leaveReq.type}</td>\n                    <td>\n                      {new Date(leaveReq.dateStart)\n                        .toLocaleDateString(\"en-GB\", {\n                          day: \"2-digit\",\n                          month: \"short\",\n                          year: \"numeric\",\n                        })\n                        .replace(/ /g, \"-\")}\n                    </td>\n                    <td>\n                      {new Date(leaveReq.dateEnd)\n                        .toLocaleDateString(\"en-GB\", {\n                          day: \"2-digit\",\n                          month: \"short\",\n                          year: \"numeric\",\n                        })\n                        .replace(/ /g, \"-\")}\n                    </td>\n                    <td>\n                      <>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#allLeaves\"\n                          onClick={() => populateSubStaffDetailsModal(leaveReq)}\n                        >\n                          view\n                        </button>\n\n                        <div\n                          className=\"modal fade\"\n                          id=\"allLeaves\"\n                          tabIndex=\"-1\"\n                          aria-labelledby=\"allLeavesLabel\"\n                          aria-hidden=\"true\"\n                        >\n                          <div className=\"modal-dialog\">\n                            <div className=\"modal-content\">\n                              <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"allLeavesLabel\">\n                                  Substitute staff requests\n                                </h5>\n                                <button\n                                  type=\"button\"\n                                  className=\"btn-close\"\n                                  data-bs-dismiss=\"modal\"\n                                  aria-label=\"Close\"\n                                ></button>\n                              </div>\n                              <div className=\"modal-body\">\n                                {leaveReqSubStaffDetails?.map((item) => {\n                                  return (\n                                    <div\n                                      key={item.name}\n                                      style={{ display: \"flex\" }}\n                                    >\n                                      <h5>\n                                        Name:<span>{item?.name}</span>\n                                      </h5>\n                                      <h5 className=\"mx-2\">\n                                        Status:\n                                        {(item?.status === 1 && (\n                                          <span className=\"text-success fw-bold\">\n                                            <CheckCircleOutlineOutlinedIcon />\n                                          </span>\n                                        )) ||\n                                          (item?.status === 0 && (\n                                            <span className=\"text-warning fw-bold\">\n                                              <PendingIcon />\n                                            </span>\n                                          )) ||\n                                          (item?.status === 2 && (\n                                            <span className=\"text-danger fw-bold\">\n                                              <CancelIcon />\n                                            </span>\n                                          ))}\n                                      </h5>\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                              <div className=\"modal-footer\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-secondary\"\n                                  data-bs-dismiss=\"modal\"\n                                >\n                                  Close\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </>\n                    </td>\n                    <td>\n                      {leaveReq.byHod === 1 ? (\n                        <span className=\"text-success fw-bold\">Approved</span>\n                      ) : (\n                        leaveReq.byAdmin === 1 && (\n                          <span className=\"text-success fw-bold\">Approved</span>\n                        )\n                      )}\n                      {leaveReq.byStaff === 2 && (\n                        <span className=\"text-danger fw-bold\">Declined</span>\n                      )}\n                      {leaveReq.byHod === 2 ? (\n                        <span className=\"text-danger fw-bold\">Declined</span>\n                      ) : (\n                        leaveReq.byAdmin === 2 && (\n                          <span className=\"text-danger fw-bold\">Declined</span>\n                        )\n                      )}\n                    </td>\n                    <td>\n                      <>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          data-bs-toggle=\"modal\"\n                          data-bs-target=\"#viewInDetailForAdmin\"\n                          onClick={() => populateDetailedView(leaveReq)}\n                        >\n                          view\n                        </button>\n\n                        <div\n                          className=\"modal fade\"\n                          id=\"viewInDetailForAdmin\"\n                          tabIndex=\"-1\"\n                          aria-labelledby=\"viewInDetailLabelforadmin\"\n                          aria-hidden=\"true\"\n                        >\n                          <div className=\"modal-dialog\">\n                            <div className=\"modal-content\">\n                              <div className=\"modal-header\">\n                                <h5\n                                  className=\"modal-title\"\n                                  id=\"exampleModalLabel\"\n                                >\n                                  Leave request details\n                                </h5>\n                                <button\n                                  type=\"button\"\n                                  className=\"btn-close\"\n                                  data-bs-dismiss=\"modal\"\n                                  aria-label=\"Close\"\n                                ></button>\n                              </div>\n                              <div\n                                className=\"modal-body\"\n                                style={{ textAlign: \"left\" }}\n                              >\n                                <h5>\n                                  Subject:\n                                  <span>{detailedLeaveReq?.subject}</span>\n                                </h5>\n                                <h5>\n                                  Description:\n                                  <span>{detailedLeaveReq?.body}</span>\n                                </h5>\n                                <h5>\n                                  Type:\n                                  <span>{detailedLeaveReq?.type}</span>\n                                </h5>\n                                <h5>\n                                  From:\n                                  <span>\n                                    {new Date(\n                                      detailedLeaveReq?.dateStart\n                                    ).toDateString()}\n                                  </span>\n                                </h5>\n                                <h5>\n                                  To:\n                                  <span>\n                                    {new Date(\n                                      detailedLeaveReq?.dateEnd\n                                    ).toDateString()}\n                                  </span>\n                                </h5>\n                                <h5>\n                                  No. of days:\n                                  <span>{detailedLeaveReq?.noOfDays}</span>\n                                </h5>\n                              </div>\n                              <div className=\"modal-footer\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn btn-secondary\"\n                                  data-bs-dismiss=\"modal\"\n                                >\n                                  Close\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllLeaves;\n","import Create from \"./pages/admin/Create\";\nimport Login from \"./pages/login/Login\";\nimport Principal from \"./pages/principal/Principal\";\nimport Staff from \"./pages/staff/Staff\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Hodrequests from \"./pages/admin/Hodrequests\";\nimport CreateLeave from \"./pages/staff/CreateLeave\";\nimport UserProfile from \"./pages/profile/UserProfile\";\nimport NavBar from \"./components/NavBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ViewStaff from \"./pages/View Staff/ViewStaff\";\nimport { Slide } from \"react-toastify\";\nimport AllLeaves from \"./pages/admin/AllLeaves\";\n\nfunction App() {\n  // hello\n  return (\n    <>\n      <ToastContainer\n        position=\"bottom-right\"\n        pauseOnHover={false}\n        autoClose={1900}\n        hideProgressBar={false}\n        newestOnTop={false}\n        transition={Slide}\n        closeOnClick\n      />\n      <Router>\n        <NavBar />\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/\" element={<Staff />} />\n          <Route path=\"/admin\" element={<Create />} />\n          <Route path=\"/principal\" element={<Principal />} />\n          <Route path=\"/leaveRequests\" element={<Hodrequests />} />\n          <Route path=\"/createLeave\" element={<CreateLeave />} />\n          <Route path=\"/profile\" element={<UserProfile />} />\n          <Route path=\"/viewStaff\" element={<ViewStaff />} />\n          <Route path=\"/allLeaves\" element={<AllLeaves />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport LeaveState from \"./context/LeaveState\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <LeaveState>\n      <App />\n    </LeaveState>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}